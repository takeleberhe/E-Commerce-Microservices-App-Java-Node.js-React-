<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<!-- Define Parent Spring Boot Version -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.0</version> <!-- Ensure compatibility with Java 21 -->
		<relativePath/> <!-- Look for the parent pom.xml in the same directory -->
	</parent>

	<!-- Define API Gateway Project Metadata -->
	<groupId>com.ecommerce</groupId>
	<artifactId>api-gateway</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>API Gateway</name>
	<description>Centralized API Gateway for the e-commerce system</description>

	<properties>
		<java.version>21</java.version> <!-- Java 21 for enhanced performance -->
		<spring-cloud.version>2024.0.0</spring-cloud.version> <!-- Spring Cloud Version -->
	</properties>

	<dependencies>

		<!-- Core Dependencies for API Gateway -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
			<!-- WebFlux is required because Spring Cloud Gateway is built on top of Project Reactor -->
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-gateway</artifactId>
			<!-- Enables API Gateway capabilities like routing, filtering, and rate limiting -->
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
			<!-- Enables Eureka Service Discovery for dynamically discovering microservices -->
		</dependency>

		<!-- Security: JWT Authentication and Authorization -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
			<!-- Adds authentication and authorization mechanisms -->
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
			<!-- Enables JWT-based authentication for securing API requests -->
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>0.11.5</version>
			<!-- JWT support for handling authentication tokens -->
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>0.11.5</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>0.11.5</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Load Balancing -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-loadbalancer</artifactId>
			<!-- Provides client-side load balancing for distributed microservices -->
		</dependency>

		<!-- Circuit Breaking & Rate Limiting -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId>
			<!-- Resilience for implementing circuit breakers, rate limiting, and bulkheads -->
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis-reactive</artifactId>
			<!-- Redis for centralized rate limiting and caching -->
		</dependency>

		<!-- Monitoring and Actuator for Observability -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<!-- Enables health checks, metrics, and monitoring endpoints -->
		</dependency>

		<!-- Development Tools -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
			<!-- Enhances development experience by enabling auto-restart and hot-reloading -->
		</dependency>

		<!-- Testing Dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<!-- Provides unit testing and integration testing support -->
		</dependency>

	</dependencies>

	<!-- Spring Cloud Dependency Management -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
				<!-- Manages versions of Spring Cloud components -->
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!-- Enables packaging and running the Spring Boot application -->
			</plugin>
		</plugins>
	</build>

</project>
